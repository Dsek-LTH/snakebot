buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.10'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:1.2"
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.3"
}

apply plugin: 'com.github.ben-manes.versions'

allprojects {
    group = 'se.cygni.snakebot'
    version = '0.1.19'

    /* Enable this for compiler warnings
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
    */
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    
    ext {
        slf4jVersion = '1.7.21'
        logbackVersion = '1.1.7'
        jacksonVersion = '2.8.2'
        springBootVersion = '2.1.3.RELEASE'
        springVersion = '4.3.2.RELEASE'
        springDataMongoVersion = '1.9.2.RELEASE'
        commonsMathVersion = '3.6.1'
        commonsLangVersion = '3.4'
        commonsBeanutilsVersion = '1.9.2'
        commonsCollectionsVersion = '4.1'
        guavaVersion = '19.0'
    }
    
       repositories {
        mavenCentral()
    }
    
	dependencies {
		implementation("org.apache.commons:commons-collections4:$commonsCollectionsVersion")
	    implementation("org.apache.commons:commons-lang3:$commonsLangVersion")
		
	
        testImplementation "junit:junit:4.12"
        testImplementation 'org.hamcrest:hamcrest-library:1.3'
    }
    
        
}

configure(subprojects.findAll { it.name == 'app'}) {
	apply plugin: 'org.springframework.boot'
    apply plugin: 'java'
    apply plugin: 'idea'
    //apply plugin: 'org.sonarqube'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'
    

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
    }

     // ext['slf4j.version'] = '1.7.21'
    
    dependencies {
	    
        implementation('org.springframework.boot:spring-boot-starter-actuator')
	    implementation('org.springframework.boot:spring-boot-starter-jersey')
	    implementation('org.springframework.boot:spring-boot-starter-websocket')
	    implementation('org.springframework.boot:spring-boot-starter-web')
	    implementation('org.springframework.boot:spring-boot-starter-jetty')

	    
	    /*
	    implementation("org.slf4j:slf4j-api:$slf4jVersion")
	    implementation("org.slf4j:jcl-over-slf4j:$slf4jVersion")
	    implementation("org.slf4j:log4j-over-slf4j:$slf4jVersion")
	    implementation("org.slf4j:jul-to-slf4j:$slf4jVersion")
	    */
 		// implementation("ch.qos.logback:logback-classic:$logbackVersion")
 	}

    task javadocJar (type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    task sourceJar (type : Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId 'snakebot-' + project.name
                from components.java
                artifact (sourceJar) {
                    classifier = 'sources'
                }
                artifact (javadocJar) {
                    classifier = 'javadoc'
                }
            }
        }
    }
    publishing {
        repositories {
            maven {
                // This is for jenkins local filesystem
                url "/var/www/mavenrepo"
            }
        }
    }


/*
    test {
        jacoco {
            append = false
        }
    }
*/
}

